@model PaginatedList<Proiect_Nohai.Models.Drug>

@{
    ViewData["Title"] = "Drugs Inventory";
}

<h1>Drugs Inventory</h1>
<br />


<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <b>Find by drug name:</b> <br /> <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /> 
            <input type="submit" value="Search" class="btn btn-default" />  <br /><br />
            <b><a asp-action="Index">Back to Full List</a></b>
        </p>
    </div>
</form>

<br />
<p>
    <a asp-action="Create">Add new drug in the list</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Manufacturer
            </th>
            <th>
                Age limit
            </th>
            <th>
                Type 
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Price</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Manufacturer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AgeLimit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeOfDrug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price) RON
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
